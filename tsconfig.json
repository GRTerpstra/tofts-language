{
  "compilerOptions": {
    "target": "esnext",
    "module": "CommonJS",
    "outDir": "./lib",
    "esModuleInterop": true,
    "forceConsistentCasingInFileNames": true,
    "strict": true,
    "skipLibCheck": true,
    "allowJs": true,
    // The declaration field (in the context of a JSON object, the terms "field" and "property" are often used interchangeably) generates .d.ts files from TypeScript and JavaScript files in your project. The "d.ts" file is used to provide typescript type information about this library that's published in JavaScript (The source code TypeScript from this library is getting transpiled to JavaScript before publishing).
    "declaration": true,
    // The declarationMap field generates source maps for .d.ts files which map back to the original .ts source file. This will allow editors such as VS Code to go to the original .ts file when using features like Go to Definition. The original .ts files (src folder) have to be be published as well with the package for this.
    "declarationMap": true,
    // With the emitDeclarationOnly field tsc will only output d.ts files and not JavaScript files (which Babel will take care of in this project)
    "emitDeclarationOnly": true,
    "isolatedModules": true
  },
  "include": ["*.ts"],
  "exclude": ["src/tests/**/*"]
}
